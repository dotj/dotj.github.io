{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack:///./src/pages/index.js"],"names":["Bio","role","aria-label","strings","raw","slice","IndexPage","data","location","siteTitle","site","siteMetadata","title","pageQuery","graphql"],"mappings":"iLAoBeA,EAVH,WACV,OACE,6BACE,4CACA,oKAAyI,0BAAMC,KAAK,MAAMC,aAAW,cAA5B,WACzI,6E,yCCf8CC,EAASC,E,GAATD,E,yaAC7CC,IACHA,EAAMD,EAAQE,MAAM,IAGtBF,EAAQC,IAAMA,EACPD,G,gCCYMG,UAXG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MAEzC,OACE,kBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,UACX,kBAAC,EAAD,QANN,IAaaC,EAAYC,kBAAH","file":"component---src-pages-index-js-3a00741efb626ac962e0.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\n\n\nconst Bio = () => {\n  return (\n    <div>\n      <p>Hi I'm Julie.</p>\n      <p>I'm a software developer and UX researcher focusing on tech ethics, privacy, and social psychology. Let's chat about wicked problems. <span role=\"img\" aria-label=\"woman mage\">üßôüèª‚Äç‚ôÄ</span></p>\n      <p>Contact me at hellojuliedo at gmail dot com.</p>\n    </div>\n  )\n}\n\nexport default Bio\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","import graphql from \"gatsby\"\nimport React from \"react\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n\nconst IndexPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"About\" />\n      <Bio />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}