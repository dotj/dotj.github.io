{"version":3,"sources":["webpack:///./src/pages/portfolio.tsx"],"names":["IndexPage","render","posts","this","props","data","allMarkdownRemark","edges","title","keywords","map","node","frontmatter","fields","slug","to","key","style","marginTop","marginBottom","display","gridTemplateColumns","gridGap","padding","border","color","textAlign","fontSize","icon","lineHeight","margin","date","description","React","pageQuery"],"mappings":"4MAiCMA,E,kGACJC,OAAA,WAAS,IAEDC,EADWC,KAAKC,MAAdC,KACWC,kBAAkBC,MAErC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEC,MAAM,wBACNC,SAAU,CAAC,cAAe,YAAa,aAAc,WAEtDP,EAAMQ,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNH,EAAQG,EAAKC,YAAYJ,OAASG,EAAKE,OAAOC,KACpD,OACE,gBAAC,OAAD,CAAMC,GAAIJ,EAAKE,OAAOC,KAAME,IAAKL,EAAKE,OAAOC,KAAMG,MAAO,CACxDC,UAAW,OACXC,aAAc,OACdC,QAAS,OACTC,oBAAqB,YACrBC,QAAS,SACTC,QAAS,gBACTC,OAAQ,OACRC,MAAO,oBAEP,uBAAKR,MAAO,CACVS,UAAW,SACXC,SAAU,SAEThB,EAAKC,YAAYgB,MAEpB,2BACE,sBAAIX,MAAO,CAAEU,SAAU,OAAQE,WAAY,SAAUC,OAAQ,SAAWtB,GACxE,0BAAKG,EAAKC,YAAYmB,MACtB,2BACCpB,EAAKC,YAAYoB,mB,GAlCVC,aA4CTjC,YAER,IAAMkC,EAAY","file":"component---src-pages-portfolio-tsx-064394984d7758cf3d10.js","sourcesContent":["import { graphql, Link } from 'gatsby'\nimport * as React from 'react'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\ninterface PostNode {\n  node: {\n    excerpt: string\n    frontmatter: {\n      date: string\n      title: string\n      description: string\n      icon: string\n    }\n    fields: {\n      slug: string\n    }\n  }\n}\n\ninterface IndexPageProps {\n  data: {\n    site: {\n      siteMetadata: {\n        siteName: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: PostNode[]\n    }\n  }\n}\n\nclass IndexPage extends React.Component<IndexPageProps, {}> {\n  render() {\n    const { data } = this.props\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout>\n        <SEO\n          title=\"UX Research Portfolio\"\n          keywords={['ux research', 'portfolio', 'javascript', 'react']}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <Link to={node.fields.slug} key={node.fields.slug} style={{\n              marginTop: '1rem',\n              marginBottom: '1rem',\n              display: 'grid',\n              gridTemplateColumns: '3rem auto',\n              gridGap: '0.5rem',\n              padding: '0.2rem 0.1rem',\n              border: 'none',\n              color: 'var(--darkgrey)'\n            }}>\n              <div style={{\n                textAlign: 'center',\n                fontSize: '2rem'\n              }}>\n                {node.frontmatter.icon}\n              </div>\n              <div>\n                <h1 style={{ fontSize: '1rem', lineHeight: '1.4rem', margin: '0rem' }}>{title}</h1>\n                <em>{node.frontmatter.date}</em>\n                <br/>\n                {node.frontmatter.description}\n              </div>\n            </Link>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM YYYY\")\n            title\n            description\n            icon\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}